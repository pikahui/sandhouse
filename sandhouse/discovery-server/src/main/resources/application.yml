server:
  port: 8080
eureka:
  instance:
    hostname: localhost
  client:
    #不注册自己
    registerWithEureka: false
    #是否拉取注册信息
    fetchRegistry: false
    #注册中心地址
    serviceUrl:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/
  server:
    #关闭eureka的自我保护
    enableSelfPreservation: false
    #默认 60000L ，启用主动失效，并且每次主动失效检测间隔为10s
    evictionIntervalTimerInMs: 10000
    #默认 30000L ，eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
    responseCacheUpdateIntervalMs: 10000
    #默认 180L ，eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
    #由于启用了evict其实就用不太上改这个配置了
    responseCacheAutoExpirationInSeconds: 180
spring:
  application:
    name: eurka-server
  #集成spring-security拦截登录
  security:
    user:
      name: admin
      password: admin
      roles: USER
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

